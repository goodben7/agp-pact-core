# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'

    App\Encoder\MultipartDecoder:
        arguments:
            $requestStack: '@request_stack'
            $logger: '@logger'
        tags:
            - { name: serializer.encoder, format: multipart, priority: 200 }

    App\Serializer\UploadedFileDenormalizer:
        tags: [ 'serializer.normalizer' ]

    App\Service\NotificationService:
        arguments:
            $em: '@doctrine.orm.entity_manager'
            $senders: !tagged_iterator 'app.notification_sender'

    App\Service\SmsNotificationSender:
        arguments:
            $keccelApiToken: '%env(KECCEL_API_TOKEN)%'
            $keccelSender: '%env(KECCEL_SENDER)%'
            $keccelCampaignId: '%env(KECCEL_CAMPAIGN_ID)%'
            $keccelRouteId: '%env(KECCEL_ROUTE_ID)%'
        tags: [ 'app.notification_sender' ]

    App\Service\WhatsappNotificationSender:
        arguments:
            $instanceId: '%env(ULTRAMSG_INSTANCE_ID)%'
            $token: '%env(ULTRAMSG_TOKEN)%'
        tags: [ 'app.notification_sender' ]

    App\Service\MailNotificationSender:
        tags: [ 'app.notification_sender' ]


    App\Provider\Auth\MultiFieldUserProvider:
        arguments:
            $entityManager: '@doctrine.orm.entity_manager'

    App\MessageHandler\GenerateReportHandler:
        arguments:
            $projectDir: '%kernel.project_dir%'

    App\Service\Generator\PdfGeneratorService:
        arguments:
            $projectDir: '%kernel.project_dir%'

    App\Service\Generator\ExcelGeneratorService:
        arguments:
            $projectDir: '%kernel.project_dir%'

    App\Service\Generator\CsvGeneratorService:
        arguments:
            $projectDir: '%kernel.project_dir%'

    App\Service\ReportDataCollectorService:

    # Configuration pour ImporterStrategyFactory
    App\Factory\ImporterStrategyFactory:
        arguments:
            $strategies: !tagged_iterator 'app.importer_strategy'

    App\MessageHandler\ProcessImportBatchMessageHandler:
        bind:
            $importUploadsDirectory: '%kernel.project_dir%/public/uploads/imports'

    App\Service\Import\Strategy\OwnerImporterStrategy:
        tags: ['app.importer_strategy']

    App\Service\Import\Strategy\TenantImporterStrategy:
        tags: ['app.importer_strategy']

    App\Service\Import\Strategy\TombsImporterStrategy:
        tags: ['app.importer_strategy']
    App\Service\TaskRunner:
        arguments:
            - !tagged_iterator sync.task_runner
    App\Manager\TaskFileManager:
        arguments:
            $projectDir: '%kernel.project_dir%'
            
    App\Tasks\ParSynchronisationTaskRunner:
        tags: ['sync.task_runner']
